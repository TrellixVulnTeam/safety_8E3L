{"ast":null,"code":"// dedupe duplicated packages, or find them in the tree\nconst Arborist = require('@npmcli/arborist');\n\nconst reifyFinish = require('./utils/reify-finish.js');\n\nconst BaseCommand = require('./base-command.js');\n\nclass Dedupe extends BaseCommand {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description() {\n    return 'Reduce duplication in the package tree';\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get name() {\n    return 'dedupe';\n  }\n\n  exec(args, cb) {\n    this.dedupe(args).then(() => cb()).catch(cb);\n  }\n\n  async dedupe(args) {\n    if (this.npm.config.get('global')) {\n      const er = new Error('`npm dedupe` does not work in global mode.');\n      er.code = 'EDEDUPEGLOBAL';\n      throw er;\n    }\n\n    const dryRun = this.npm.config.get('dry-run');\n    const where = this.npm.prefix;\n    const opts = { ...this.npm.flatOptions,\n      log: this.npm.log,\n      path: where,\n      dryRun\n    };\n    const arb = new Arborist(opts);\n    await arb.dedupe(opts);\n    await reifyFinish(this.npm, arb);\n  }\n\n}\n\nmodule.exports = Dedupe;","map":{"version":3,"sources":["/Users/kaelen/nsc-mds/node_modules/npm/lib/dedupe.js"],"names":["Arborist","require","reifyFinish","BaseCommand","Dedupe","description","name","exec","args","cb","dedupe","then","catch","npm","config","get","er","Error","code","dryRun","where","prefix","opts","flatOptions","log","path","arb","module","exports"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,kBAAD,CAAxB;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,yBAAD,CAA3B;;AAEA,MAAME,WAAW,GAAGF,OAAO,CAAC,mBAAD,CAA3B;;AAEA,MAAMG,MAAN,SAAqBD,WAArB,CAAiC;AAC/B;AACsB,aAAXE,WAAW,GAAI;AACxB,WAAO,wCAAP;AACD;AAED;;;AACe,aAAJC,IAAI,GAAI;AACjB,WAAO,QAAP;AACD;;AAEDC,EAAAA,IAAI,CAAEC,IAAF,EAAQC,EAAR,EAAY;AACd,SAAKC,MAAL,CAAYF,IAAZ,EAAkBG,IAAlB,CAAuB,MAAMF,EAAE,EAA/B,EAAmCG,KAAnC,CAAyCH,EAAzC;AACD;;AAEW,QAANC,MAAM,CAAEF,IAAF,EAAQ;AAClB,QAAI,KAAKK,GAAL,CAASC,MAAT,CAAgBC,GAAhB,CAAoB,QAApB,CAAJ,EAAmC;AACjC,YAAMC,EAAE,GAAG,IAAIC,KAAJ,CAAU,4CAAV,CAAX;AACAD,MAAAA,EAAE,CAACE,IAAH,GAAU,eAAV;AACA,YAAMF,EAAN;AACD;;AAED,UAAMG,MAAM,GAAG,KAAKN,GAAL,CAASC,MAAT,CAAgBC,GAAhB,CAAoB,SAApB,CAAf;AACA,UAAMK,KAAK,GAAG,KAAKP,GAAL,CAASQ,MAAvB;AACA,UAAMC,IAAI,GAAG,EACX,GAAG,KAAKT,GAAL,CAASU,WADD;AAEXC,MAAAA,GAAG,EAAE,KAAKX,GAAL,CAASW,GAFH;AAGXC,MAAAA,IAAI,EAAEL,KAHK;AAIXD,MAAAA;AAJW,KAAb;AAMA,UAAMO,GAAG,GAAG,IAAI1B,QAAJ,CAAasB,IAAb,CAAZ;AACA,UAAMI,GAAG,CAAChB,MAAJ,CAAWY,IAAX,CAAN;AACA,UAAMpB,WAAW,CAAC,KAAKW,GAAN,EAAWa,GAAX,CAAjB;AACD;;AAjC8B;;AAoCjCC,MAAM,CAACC,OAAP,GAAiBxB,MAAjB","sourcesContent":["// dedupe duplicated packages, or find them in the tree\nconst Arborist = require('@npmcli/arborist')\nconst reifyFinish = require('./utils/reify-finish.js')\n\nconst BaseCommand = require('./base-command.js')\n\nclass Dedupe extends BaseCommand {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description () {\n    return 'Reduce duplication in the package tree'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name () {\n    return 'dedupe'\n  }\n\n  exec (args, cb) {\n    this.dedupe(args).then(() => cb()).catch(cb)\n  }\n\n  async dedupe (args) {\n    if (this.npm.config.get('global')) {\n      const er = new Error('`npm dedupe` does not work in global mode.')\n      er.code = 'EDEDUPEGLOBAL'\n      throw er\n    }\n\n    const dryRun = this.npm.config.get('dry-run')\n    const where = this.npm.prefix\n    const opts = {\n      ...this.npm.flatOptions,\n      log: this.npm.log,\n      path: where,\n      dryRun,\n    }\n    const arb = new Arborist(opts)\n    await arb.dedupe(opts)\n    await reifyFinish(this.npm, arb)\n  }\n}\n\nmodule.exports = Dedupe\n"]},"metadata":{},"sourceType":"script"}