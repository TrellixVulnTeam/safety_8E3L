{"ast":null,"code":"const uniqueFilename = require('unique-filename');\n\nconst {\n  join\n} = require('path');\n\nconst {\n  tmpdir\n} = require('os');\n\nconst goodEnvVars = new Set(['GIT_ASKPASS', 'GIT_EXEC_PATH', 'GIT_PROXY_COMMAND', 'GIT_SSH', 'GIT_SSH_COMMAND', 'GIT_SSL_CAINFO', 'GIT_SSL_NO_VERIFY']); // memoize\n\nlet gitEnv;\n\nmodule.exports = () => {\n  if (gitEnv) return gitEnv; // we set the template dir to an empty folder to give git less to do\n\n  const tmpDir = join(tmpdir(), 'npmcli-git-template-tmp');\n  const tmpName = uniqueFilename(tmpDir, 'git-clone');\n  return gitEnv = Object.keys(process.env).reduce((gitEnv, k) => {\n    if (goodEnvVars.has(k) || !k.startsWith('GIT_')) gitEnv[k] = process.env[k];\n    return gitEnv;\n  }, {\n    GIT_ASKPASS: 'echo',\n    GIT_TEMPLATE_DIR: tmpName\n  });\n};","map":{"version":3,"sources":["/Users/kaelen/nsc-mds/node_modules/npm/node_modules/@npmcli/git/lib/env.js"],"names":["uniqueFilename","require","join","tmpdir","goodEnvVars","Set","gitEnv","module","exports","tmpDir","tmpName","Object","keys","process","env","reduce","k","has","startsWith","GIT_ASKPASS","GIT_TEMPLATE_DIR"],"mappings":"AAAA,MAAMA,cAAc,GAAGC,OAAO,CAAC,iBAAD,CAA9B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAWD,OAAO,CAAC,MAAD,CAAxB;;AACA,MAAM;AAACE,EAAAA;AAAD,IAAWF,OAAO,CAAC,IAAD,CAAxB;;AAEA,MAAMG,WAAW,GAAG,IAAIC,GAAJ,CAAQ,CAC1B,aAD0B,EAE1B,eAF0B,EAG1B,mBAH0B,EAI1B,SAJ0B,EAK1B,iBAL0B,EAM1B,gBAN0B,EAO1B,mBAP0B,CAAR,CAApB,C,CAUA;;AACA,IAAIC,MAAJ;;AAEAC,MAAM,CAACC,OAAP,GAAiB,MAAM;AACrB,MAAIF,MAAJ,EACE,OAAOA,MAAP,CAFmB,CAIrB;;AACA,QAAMG,MAAM,GAAGP,IAAI,CAACC,MAAM,EAAP,EAAW,yBAAX,CAAnB;AACA,QAAMO,OAAO,GAAGV,cAAc,CAACS,MAAD,EAAS,WAAT,CAA9B;AACA,SAAOH,MAAM,GAAGK,MAAM,CAACC,IAAP,CAAYC,OAAO,CAACC,GAApB,EAAyBC,MAAzB,CAAgC,CAACT,MAAD,EAASU,CAAT,KAAe;AAC7D,QAAIZ,WAAW,CAACa,GAAZ,CAAgBD,CAAhB,KAAsB,CAACA,CAAC,CAACE,UAAF,CAAa,MAAb,CAA3B,EACEZ,MAAM,CAACU,CAAD,CAAN,GAAYH,OAAO,CAACC,GAAR,CAAYE,CAAZ,CAAZ;AACF,WAAOV,MAAP;AACD,GAJe,EAIb;AACDa,IAAAA,WAAW,EAAE,MADZ;AAEDC,IAAAA,gBAAgB,EAAEV;AAFjB,GAJa,CAAhB;AAQD,CAfD","sourcesContent":["const uniqueFilename = require('unique-filename')\nconst { join } = require('path')\nconst {tmpdir} = require('os')\n\nconst goodEnvVars = new Set([\n  'GIT_ASKPASS',\n  'GIT_EXEC_PATH',\n  'GIT_PROXY_COMMAND',\n  'GIT_SSH',\n  'GIT_SSH_COMMAND',\n  'GIT_SSL_CAINFO',\n  'GIT_SSL_NO_VERIFY'\n])\n\n// memoize\nlet gitEnv\n\nmodule.exports = () => {\n  if (gitEnv)\n    return gitEnv\n\n  // we set the template dir to an empty folder to give git less to do\n  const tmpDir = join(tmpdir(), 'npmcli-git-template-tmp')\n  const tmpName = uniqueFilename(tmpDir, 'git-clone')\n  return gitEnv = Object.keys(process.env).reduce((gitEnv, k) => {\n    if (goodEnvVars.has(k) || !k.startsWith('GIT_'))\n      gitEnv[k] = process.env[k]\n    return gitEnv\n  }, {\n    GIT_ASKPASS: 'echo',\n    GIT_TEMPLATE_DIR: tmpName\n  })\n}\n"]},"metadata":{},"sourceType":"script"}