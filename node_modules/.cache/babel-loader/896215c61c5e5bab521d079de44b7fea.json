{"ast":null,"code":"var _jsxFileName = \"/Users/kaelen/nsc-mds/src/pages/Form.js\";\nimport axios from \"axios\";\nimport React, { Component } from \"react\";\nimport Success from \"../components/Success\";\nimport \"../styles/Form.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onFileChange = event => {\n      // var files = event.target.files;\n      // if(this.checkExtension(event)) {\n      this.setState({\n        selectedFile: event.target.files[0],\n        loaded: 0\n      }); // }\n    };\n\n    this.onFileUpload = () => {\n      const formData = new FormData();\n      formData.append(\"myFile\", this.state.selectedFile, this.state.selectedFile.name);\n      axios.post(\"http://localhost:8000/\", formData, {}).then(function (res) {\n        /*#__PURE__*/\n        _jsxDEV(Success, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this);\n      }).catch(function (err) {\n        var btn = document.querySelector(\".submit\");\n        btn.classList.toggle(\"fail\");\n      });\n    };\n\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", this.state.selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Type: \", this.state.selectedFile.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    this.state = {\n      selectedFile: null\n    };\n  } // checkExtension = (event) => {\n  //   let files = event.target.files;\n  //   let err = '';\n  //   // const types = ['file/json']; necessary if more than one file type accepted\n  //   for (var x = 0; x < files.length; x++) {\n  //     if (files[x].type !== 'file/json') {\n  //       err += files[x].type + ' is not a supported format\\n';\n  //     }\n  //   };\n  //   if (err != '') {\n  //     event.target.value = null;\n  //     console.log(err);\n  //     return false;\n  //   }\n  //   return true;\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Submit form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"input\",\n            placeholder: \"name\",\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"name\",\n            class: \"text-label\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"input\",\n            placeholder: \"company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"name\",\n            class: \"text-label\",\n            children: \"Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group files\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"form-control\",\n            multiple: \"\",\n            onChange: this.onFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit\",\n          onClick: this.onFileUpload,\n          children: \"Submit!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/kaelen/nsc-mds/src/pages/Form.js"],"names":["axios","React","Component","Success","Form","constructor","props","onFileChange","event","setState","selectedFile","target","files","loaded","onFileUpload","formData","FormData","append","state","name","post","then","res","catch","err","btn","document","querySelector","classList","toggle","fileData","type","render"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport Success from \"../components/Success\";\nimport \"../styles/Form.scss\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedFile: null,\n    };\n  }\n\n  // checkExtension = (event) => {\n  //   let files = event.target.files;\n  //   let err = '';\n  //   // const types = ['file/json']; necessary if more than one file type accepted\n  //   for (var x = 0; x < files.length; x++) {\n  //     if (files[x].type !== 'file/json') {\n  //       err += files[x].type + ' is not a supported format\\n';\n  //     }\n  //   };\n\n  //   if (err != '') {\n  //     event.target.value = null;\n  //     console.log(err);\n  //     return false;\n  //   }\n  //   return true;\n  // }\n\n  onFileChange = (event) => {\n    // var files = event.target.files;\n    // if(this.checkExtension(event)) {\n    this.setState({\n      selectedFile: event.target.files[0],\n      loaded: 0,\n    });\n    // }\n  };\n\n  onFileUpload = () => {\n    const formData = new FormData();\n\n    formData.append(\n      \"myFile\",\n      this.state.selectedFile,\n      this.state.selectedFile.name\n    );\n\n    axios\n      .post(\"http://localhost:8000/\", formData, {})\n      .then(function (res) {\n        <Success />;\n      })\n      .catch(function (err) {\n        var btn = document.querySelector(\".submit\");\n        btn.classList.toggle(\"fail\");\n      });\n  };\n\n  fileData = () => {\n    if (this.state.selectedFile) {\n      return (\n        <div>\n          <p>File Name: {this.state.selectedFile.name}</p>\n          <p>File Type: {this.state.selectedFile.type}</p>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div id=\"Form\">\n        <h1>Submit form</h1>\n        <form>\n          <div className=\"group field\">\n            <input className=\"text\" type=\"input\" placeholder=\"name\" name=\"name\" />\n            <label for=\"name\" class=\"text-label\">\n              Name\n            </label>\n          </div>\n          <div className=\"group field\">\n            <input className=\"text\" type=\"input\" placeholder=\"company\"/>\n            <label for=\"name\" class=\"text-label\">\n              Company\n            </label>\n          </div>\n          <div className=\"form-group files\">\n            <input\n              type=\"file\"\n              className=\"form-control\"\n              multiple=\"\"\n              onChange={this.onFileChange}\n            />\n          </div>\n          <button className=\"submit\" onClick={this.onFileUpload}>\n            Submit!\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}