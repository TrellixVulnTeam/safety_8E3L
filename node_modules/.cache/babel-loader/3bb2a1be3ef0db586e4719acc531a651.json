{"ast":null,"code":"'use strict';\n\nconst initializeCache = require('./initialize-cache');\n\nmodule.exports = function configureOptions(_opts) {\n  const opts = Object.assign({}, _opts || {});\n  opts.method = (opts.method || 'GET').toUpperCase();\n\n  if (!opts.retry) {\n    // opts.retry was falsy; set default\n    opts.retry = {\n      retries: 0\n    };\n  } else {\n    if (typeof opts.retry !== 'object') {\n      // Shorthand\n      if (typeof opts.retry === 'number') opts.retry = {\n        retries: opts.retry\n      };\n\n      if (typeof opts.retry === 'string') {\n        const value = parseInt(opts.retry, 10);\n        opts.retry = value ? {\n          retries: value\n        } : {\n          retries: 0\n        };\n      }\n    } else {\n      // Set default retries\n      opts.retry = Object.assign({}, {\n        retries: 0\n      }, opts.retry);\n    }\n  }\n\n  if (opts.cacheManager) initializeCache(opts);\n  return opts;\n};","map":{"version":3,"sources":["/Users/kaelen/nsc-mds/node_modules/npm/node_modules/make-fetch-happen/utils/configure-options.js"],"names":["initializeCache","require","module","exports","configureOptions","_opts","opts","Object","assign","method","toUpperCase","retry","retries","value","parseInt","cacheManager"],"mappings":"AAAA;;AAEA,MAAMA,eAAe,GAAGC,OAAO,CAAC,oBAAD,CAA/B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,gBAAT,CAA2BC,KAA3B,EAAkC;AACjD,QAAMC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,KAAK,IAAI,EAA3B,CAAb;AACAC,EAAAA,IAAI,CAACG,MAAL,GAAc,CAACH,IAAI,CAACG,MAAL,IAAe,KAAhB,EAAuBC,WAAvB,EAAd;;AAEA,MAAI,CAACJ,IAAI,CAACK,KAAV,EAAiB;AACf;AACAL,IAAAA,IAAI,CAACK,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AACD,GAHD,MAGO;AACL,QAAI,OAAON,IAAI,CAACK,KAAZ,KAAsB,QAA1B,EAAoC;AAClC;AACA,UAAI,OAAOL,IAAI,CAACK,KAAZ,KAAsB,QAA1B,EACEL,IAAI,CAACK,KAAL,GAAa;AAAEC,QAAAA,OAAO,EAAEN,IAAI,CAACK;AAAhB,OAAb;;AAEF,UAAI,OAAOL,IAAI,CAACK,KAAZ,KAAsB,QAA1B,EAAoC;AAClC,cAAME,KAAK,GAAGC,QAAQ,CAACR,IAAI,CAACK,KAAN,EAAa,EAAb,CAAtB;AACAL,QAAAA,IAAI,CAACK,KAAL,GAAcE,KAAD,GAAU;AAAED,UAAAA,OAAO,EAAEC;AAAX,SAAV,GAA+B;AAAED,UAAAA,OAAO,EAAE;AAAX,SAA5C;AACD;AACF,KATD,MASO;AACL;AACAN,MAAAA,IAAI,CAACK,KAAL,GAAaJ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAAEI,QAAAA,OAAO,EAAE;AAAX,OAAlB,EAAkCN,IAAI,CAACK,KAAvC,CAAb;AACD;AACF;;AAED,MAAIL,IAAI,CAACS,YAAT,EACEf,eAAe,CAACM,IAAD,CAAf;AAEF,SAAOA,IAAP;AACD,CA3BD","sourcesContent":["'use strict'\n\nconst initializeCache = require('./initialize-cache')\n\nmodule.exports = function configureOptions (_opts) {\n  const opts = Object.assign({}, _opts || {})\n  opts.method = (opts.method || 'GET').toUpperCase()\n\n  if (!opts.retry) {\n    // opts.retry was falsy; set default\n    opts.retry = { retries: 0 }\n  } else {\n    if (typeof opts.retry !== 'object') {\n      // Shorthand\n      if (typeof opts.retry === 'number')\n        opts.retry = { retries: opts.retry }\n\n      if (typeof opts.retry === 'string') {\n        const value = parseInt(opts.retry, 10)\n        opts.retry = (value) ? { retries: value } : { retries: 0 }\n      }\n    } else {\n      // Set default retries\n      opts.retry = Object.assign({}, { retries: 0 }, opts.retry)\n    }\n  }\n\n  if (opts.cacheManager)\n    initializeCache(opts)\n\n  return opts\n}\n"]},"metadata":{},"sourceType":"script"}