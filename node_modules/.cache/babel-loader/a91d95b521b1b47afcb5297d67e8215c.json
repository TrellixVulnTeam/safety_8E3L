{"ast":null,"code":"var _jsxFileName = \"/Users/kaelen/nsc-mds/src/pages/Form.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport \"../styles/Form.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {}\n  //   this.handleChange = this.handleChange.bind(this);\n  //   this.handleSubmit = this.handleSubmit.bind(this);\n  // }\n  // handleChange(event) {\n  //   this.setState({value: event.target.value});\n  // }\n  // handleSubmit(event) {\n  //   event.preventDefault();\n  // }\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: props.locked && props.active || false,\n      value: props.value || \"\",\n      error: props.value || \"\",\n      label: props.label || \"Label\"\n    };\n  }\n\n  changeValue(event) {\n    const value = event.target.value;\n    this.setState({\n      value,\n      error: \"\"\n    });\n  }\n\n  handleKeyPress(event) {\n    if (event.which == 13) {\n      this.setState({\n        value: this.props.predicted\n      });\n    }\n  }\n\n  render() {\n    const {\n      active,\n      value,\n      error,\n      label\n    } = this.state;\n    const {\n      predicted,\n      locked\n    } = this.props;\n    const fieldClassName = 'field ${(locked ? active : active || value';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/kaelen/nsc-mds/src/pages/Form.js"],"names":["React","Component","PropTypes","Form","constructor","props","state","active","locked","value","error","label","changeValue","event","target","setState","handleKeyPress","which","predicted","render","fieldClassName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,qBAAP;;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAE3B;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEAG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAGF,KAAK,CAACG,MAAN,IAAgBH,KAAK,CAACE,MAAvB,IAAkC,KAD/B;AAEXE,MAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,IAAe,EAFX;AAGXC,MAAAA,KAAK,EAAEL,KAAK,CAACI,KAAN,IAAe,EAHX;AAIXE,MAAAA,KAAK,EAAEN,KAAK,CAACM,KAAN,IAAe;AAJX,KAAb;AAMD;;AAEDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMJ,KAAK,GAAGI,KAAK,CAACC,MAAN,CAAaL,KAA3B;AACA,SAAKM,QAAL,CAAc;AAAEN,MAAAA,KAAF;AAASC,MAAAA,KAAK,EAAE;AAAhB,KAAd;AACD;;AAEDM,EAAAA,cAAc,CAACH,KAAD,EAAQ;AACpB,QAAIA,KAAK,CAACI,KAAN,IAAe,EAAnB,EAAuB;AACrB,WAAKF,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWa;AAApB,OAAd;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEZ,MAAAA,MAAF;AAAUE,MAAAA,KAAV;AAAiBC,MAAAA,KAAjB;AAAwBC,MAAAA;AAAxB,QAAkC,KAAKL,KAA7C;AACA,UAAM;AAAEY,MAAAA,SAAF;AAAaV,MAAAA;AAAb,QAAwB,KAAKH,KAAnC;AACA,UAAMe,cAAc,GAAG,4CAAvB;AAEA,wBACE;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AArE0B;;AAwE7B,eAAejB,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport \"../styles/Form.scss\";\n\nclass Form extends Component {\n\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {}\n\n  //   this.handleChange = this.handleChange.bind(this);\n  //   this.handleSubmit = this.handleSubmit.bind(this);\n  // }\n\n  // handleChange(event) {\n  //   this.setState({value: event.target.value});\n  // }\n\n  // handleSubmit(event) {\n  //   event.preventDefault();\n  // }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: (props.locked && props.active) || false,\n      value: props.value || \"\",\n      error: props.value || \"\",\n      label: props.label || \"Label\",\n    };\n  }\n\n  changeValue(event) {\n    const value = event.target.value;\n    this.setState({ value, error: \"\" });\n  }\n\n  handleKeyPress(event) {\n    if (event.which == 13) {\n      this.setState({ value: this.props.predicted });\n    }\n  }\n\n  render() {\n\n    const { active, value, error, label } = this.state;\n    const { predicted, locked } = this.props;\n    const fieldClassName = 'field ${(locked ? active : active || value'\n  \n    return (\n      <div id=\"Form\">\n      \n        {/* <form onSubmit={this.handleSubmit}>\n            <input\n              type=\"text\"\n              placeholder=\"Name\"\n              value={this.state.value}\n              onChange={this.handleChange}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Company\"\n              value={this.state.value}\n              onChange={this.handleChange}\n            />\n            <input\n              type=\"file\"\n            />\n          <input type=\"submit\" value=\"Submit\" />\n        </form> */}\n      </div>\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}