{"ast":null,"code":"const os = require('os');\n\nconst path = require('path');\n\nconst pacote = require('pacote');\n\nconst table = require('text-table');\n\nconst color = require('ansicolors');\n\nconst styles = require('ansistyles');\n\nconst npa = require('npm-package-arg');\n\nconst pickManifest = require('npm-pick-manifest');\n\nconst Arborist = require('@npmcli/arborist');\n\nconst ansiTrim = require('./utils/ansi-trim.js');\n\nconst BaseCommand = require('./base-command.js');\n\nclass Outdated extends BaseCommand {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description() {\n    return 'Check for outdated packages';\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get name() {\n    return 'outdated';\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get usage() {\n    return ['[[<@scope>/]<pkg> ...]'];\n  }\n\n  exec(args, cb) {\n    this.outdated(args).then(() => cb()).catch(cb);\n  }\n\n  async outdated(args) {\n    const global = path.resolve(this.npm.globalDir, '..');\n    const where = this.npm.config.get('global') ? global : this.npm.prefix;\n    const arb = new Arborist({ ...this.npm.flatOptions,\n      path: where\n    });\n    this.edges = new Set();\n    this.list = [];\n    this.tree = await arb.loadActual();\n\n    if (args.length !== 0) {\n      // specific deps\n      for (let i = 0; i < args.length; i++) {\n        const nodes = this.tree.inventory.query('name', args[i]);\n        this.getEdges(nodes, 'edgesIn');\n      }\n    } else {\n      if (this.npm.config.get('all')) {\n        // all deps in tree\n        const nodes = this.tree.inventory.values();\n        this.getEdges(nodes, 'edgesOut');\n      } // top-level deps\n\n\n      this.getEdges();\n    }\n\n    await Promise.all(Array.from(this.edges).map(edge => {\n      return this.getOutdatedInfo(edge);\n    })); // sorts list alphabetically\n\n    const outdated = this.list.sort((a, b) => a.name.localeCompare(b.name)); // return if no outdated packages\n\n    if (outdated.length === 0 && !this.npm.config.get('json')) return; // display results\n\n    if (this.npm.config.get('json')) this.npm.output(this.makeJSON(outdated));else if (this.npm.config.get('parseable')) this.npm.output(this.makeParseable(outdated));else {\n      const outList = outdated.map(x => this.makePretty(x));\n      const outHead = ['Package', 'Current', 'Wanted', 'Latest', 'Location', 'Depended by'];\n      if (this.npm.config.get('long')) outHead.push('Package Type', 'Homepage');\n      const outTable = [outHead].concat(outList);\n      if (this.npm.color) outTable[0] = outTable[0].map(heading => styles.underline(heading));\n      const tableOpts = {\n        align: ['l', 'r', 'r', 'r', 'l'],\n        stringLength: s => ansiTrim(s).length\n      };\n      this.npm.output(table(outTable, tableOpts));\n    }\n  }\n\n  getEdges(nodes, type) {\n    if (!nodes) return this.getEdgesOut(this.tree);\n\n    for (const node of nodes) {\n      type === 'edgesOut' ? this.getEdgesOut(node) : this.getEdgesIn(node);\n    }\n  }\n\n  getEdgesIn(node) {\n    for (const edge of node.edgesIn) this.edges.add(edge);\n  }\n\n  getEdgesOut(node) {\n    if (this.npm.config.get('global')) {\n      for (const child of node.children.values()) this.edges.add(child);\n    } else {\n      for (const edge of node.edgesOut.values()) this.edges.add(edge);\n    }\n  }\n\n  async getPackument(spec) {\n    const packument = await pacote.packument(spec, { ...this.npm.flatOptions,\n      fullMetadata: this.npm.config.get('long'),\n      preferOnline: true\n    });\n    return packument;\n  }\n\n  async getOutdatedInfo(edge) {\n    const spec = npa(edge.name);\n    const node = edge.to || edge;\n    const {\n      path,\n      location\n    } = node;\n    const {\n      version: current\n    } = node.package || {};\n    const type = edge.optional ? 'optionalDependencies' : edge.peer ? 'peerDependencies' : edge.dev ? 'devDependencies' : 'dependencies';\n\n    for (const omitType of this.npm.config.get('omit') || []) {\n      if (node[omitType]) return;\n    } // deps different from prod not currently\n    // on disk are not included in the output\n\n\n    if (edge.error === 'MISSING' && type !== 'dependencies') return;\n\n    try {\n      const packument = await this.getPackument(spec);\n      const expected = edge.spec; // if it's not a range, version, or tag, skip it\n\n      try {\n        if (!npa(`${edge.name}@${edge.spec}`).registry) return null;\n      } catch (err) {\n        return null;\n      }\n\n      const wanted = pickManifest(packument, expected, this.npm.flatOptions);\n      const latest = pickManifest(packument, '*', this.npm.flatOptions);\n\n      if (!current || current !== wanted.version || wanted.version !== latest.version) {\n        this.list.push({\n          name: edge.name,\n          path,\n          type,\n          current,\n          location,\n          wanted: wanted.version,\n          latest: latest.version,\n          dependent: edge.from ? edge.from.name : 'global',\n          homepage: packument.homepage\n        });\n      }\n    } catch (err) {\n      // silently catch and ignore ETARGET, E403 &\n      // E404 errors, deps are just skipped\n      if (!(err.code === 'ETARGET' || err.code === 'E403' || err.code === 'E404')) throw err;\n    }\n  } // formatting functions\n\n\n  makePretty(dep) {\n    const {\n      current = 'MISSING',\n      location = '-',\n      homepage = '',\n      name,\n      wanted,\n      latest,\n      type,\n      dependent\n    } = dep;\n    const columns = [name, current, wanted, latest, location, dependent];\n\n    if (this.npm.config.get('long')) {\n      columns[6] = type;\n      columns[7] = homepage;\n    }\n\n    if (this.npm.color) {\n      columns[0] = color[current === wanted ? 'yellow' : 'red'](columns[0]); // current\n\n      columns[2] = color.green(columns[2]); // wanted\n\n      columns[3] = color.magenta(columns[3]); // latest\n    }\n\n    return columns;\n  } // --parseable creates output like this:\n  // <fullpath>:<name@wanted>:<name@installed>:<name@latest>:<dependedby>\n\n\n  makeParseable(list) {\n    return list.map(dep => {\n      const {\n        name,\n        current,\n        wanted,\n        latest,\n        path,\n        dependent,\n        type,\n        homepage\n      } = dep;\n      const out = [path, name + '@' + wanted, current ? name + '@' + current : 'MISSING', name + '@' + latest, dependent];\n      if (this.npm.config.get('long')) out.push(type, homepage);\n      return out.join(':');\n    }).join(os.EOL);\n  }\n\n  makeJSON(list) {\n    const out = {};\n    list.forEach(dep => {\n      const {\n        name,\n        current,\n        wanted,\n        latest,\n        path,\n        type,\n        dependent,\n        homepage\n      } = dep;\n      out[name] = {\n        current,\n        wanted,\n        latest,\n        dependent,\n        location: path\n      };\n\n      if (this.npm.config.get('long')) {\n        out[name].type = type;\n        out[name].homepage = homepage;\n      }\n    });\n    return JSON.stringify(out, null, 2);\n  }\n\n}\n\nmodule.exports = Outdated;","map":{"version":3,"sources":["/Users/kaelen/nsc-mds/node_modules/npm/lib/outdated.js"],"names":["os","require","path","pacote","table","color","styles","npa","pickManifest","Arborist","ansiTrim","BaseCommand","Outdated","description","name","usage","exec","args","cb","outdated","then","catch","global","resolve","npm","globalDir","where","config","get","prefix","arb","flatOptions","edges","Set","list","tree","loadActual","length","i","nodes","inventory","query","getEdges","values","Promise","all","Array","from","map","edge","getOutdatedInfo","sort","a","b","localeCompare","output","makeJSON","makeParseable","outList","x","makePretty","outHead","push","outTable","concat","heading","underline","tableOpts","align","stringLength","s","type","getEdgesOut","node","getEdgesIn","edgesIn","add","child","children","edgesOut","getPackument","spec","packument","fullMetadata","preferOnline","to","location","version","current","package","optional","peer","dev","omitType","error","expected","registry","err","wanted","latest","dependent","homepage","code","dep","columns","green","magenta","out","join","EOL","forEach","JSON","stringify","module","exports"],"mappings":"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","sourcesContent":["const os = require('os')\nconst path = require('path')\nconst pacote = require('pacote')\nconst table = require('text-table')\nconst color = require('ansicolors')\nconst styles = require('ansistyles')\nconst npa = require('npm-package-arg')\nconst pickManifest = require('npm-pick-manifest')\n\nconst Arborist = require('@npmcli/arborist')\n\nconst ansiTrim = require('./utils/ansi-trim.js')\nconst BaseCommand = require('./base-command.js')\n\nclass Outdated extends BaseCommand {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description () {\n    return 'Check for outdated packages'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name () {\n    return 'outdated'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage () {\n    return ['[[<@scope>/]<pkg> ...]']\n  }\n\n  exec (args, cb) {\n    this.outdated(args).then(() => cb()).catch(cb)\n  }\n\n  async outdated (args) {\n    const global = path.resolve(this.npm.globalDir, '..')\n    const where = this.npm.config.get('global')\n      ? global\n      : this.npm.prefix\n\n    const arb = new Arborist({\n      ...this.npm.flatOptions,\n      path: where,\n    })\n\n    this.edges = new Set()\n    this.list = []\n    this.tree = await arb.loadActual()\n\n    if (args.length !== 0) {\n      // specific deps\n      for (let i = 0; i < args.length; i++) {\n        const nodes = this.tree.inventory.query('name', args[i])\n        this.getEdges(nodes, 'edgesIn')\n      }\n    } else {\n      if (this.npm.config.get('all')) {\n        // all deps in tree\n        const nodes = this.tree.inventory.values()\n        this.getEdges(nodes, 'edgesOut')\n      }\n      // top-level deps\n      this.getEdges()\n    }\n\n    await Promise.all(Array.from(this.edges).map((edge) => {\n      return this.getOutdatedInfo(edge)\n    }))\n\n    // sorts list alphabetically\n    const outdated = this.list.sort((a, b) => a.name.localeCompare(b.name))\n\n    // return if no outdated packages\n    if (outdated.length === 0 && !this.npm.config.get('json'))\n      return\n\n    // display results\n    if (this.npm.config.get('json'))\n      this.npm.output(this.makeJSON(outdated))\n    else if (this.npm.config.get('parseable'))\n      this.npm.output(this.makeParseable(outdated))\n    else {\n      const outList = outdated.map(x => this.makePretty(x))\n      const outHead = ['Package',\n        'Current',\n        'Wanted',\n        'Latest',\n        'Location',\n        'Depended by',\n      ]\n\n      if (this.npm.config.get('long'))\n        outHead.push('Package Type', 'Homepage')\n      const outTable = [outHead].concat(outList)\n\n      if (this.npm.color)\n        outTable[0] = outTable[0].map(heading => styles.underline(heading))\n\n      const tableOpts = {\n        align: ['l', 'r', 'r', 'r', 'l'],\n        stringLength: s => ansiTrim(s).length,\n      }\n      this.npm.output(table(outTable, tableOpts))\n    }\n  }\n\n  getEdges (nodes, type) {\n    if (!nodes)\n      return this.getEdgesOut(this.tree)\n    for (const node of nodes) {\n      type === 'edgesOut'\n        ? this.getEdgesOut(node)\n        : this.getEdgesIn(node)\n    }\n  }\n\n  getEdgesIn (node) {\n    for (const edge of node.edgesIn)\n      this.edges.add(edge)\n  }\n\n  getEdgesOut (node) {\n    if (this.npm.config.get('global')) {\n      for (const child of node.children.values())\n        this.edges.add(child)\n    } else {\n      for (const edge of node.edgesOut.values())\n        this.edges.add(edge)\n    }\n  }\n\n  async getPackument (spec) {\n    const packument = await pacote.packument(spec, {\n      ...this.npm.flatOptions,\n      fullMetadata: this.npm.config.get('long'),\n      preferOnline: true,\n    })\n    return packument\n  }\n\n  async getOutdatedInfo (edge) {\n    const spec = npa(edge.name)\n    const node = edge.to || edge\n    const { path, location } = node\n    const { version: current } = node.package || {}\n\n    const type = edge.optional ? 'optionalDependencies'\n      : edge.peer ? 'peerDependencies'\n      : edge.dev ? 'devDependencies'\n      : 'dependencies'\n\n    for (const omitType of this.npm.config.get('omit') || []) {\n      if (node[omitType])\n        return\n    }\n\n    // deps different from prod not currently\n    // on disk are not included in the output\n    if (edge.error === 'MISSING' && type !== 'dependencies')\n      return\n\n    try {\n      const packument = await this.getPackument(spec)\n      const expected = edge.spec\n      // if it's not a range, version, or tag, skip it\n      try {\n        if (!npa(`${edge.name}@${edge.spec}`).registry)\n          return null\n      } catch (err) {\n        return null\n      }\n      const wanted = pickManifest(packument, expected, this.npm.flatOptions)\n      const latest = pickManifest(packument, '*', this.npm.flatOptions)\n\n      if (\n        !current ||\n        current !== wanted.version ||\n        wanted.version !== latest.version\n      ) {\n        this.list.push({\n          name: edge.name,\n          path,\n          type,\n          current,\n          location,\n          wanted: wanted.version,\n          latest: latest.version,\n          dependent: edge.from ? edge.from.name : 'global',\n          homepage: packument.homepage,\n        })\n      }\n    } catch (err) {\n      // silently catch and ignore ETARGET, E403 &\n      // E404 errors, deps are just skipped\n      if (!(\n        err.code === 'ETARGET' ||\n        err.code === 'E403' ||\n        err.code === 'E404')\n      )\n        throw err\n    }\n  }\n\n  // formatting functions\n  makePretty (dep) {\n    const {\n      current = 'MISSING',\n      location = '-',\n      homepage = '',\n      name,\n      wanted,\n      latest,\n      type,\n      dependent,\n    } = dep\n\n    const columns = [name, current, wanted, latest, location, dependent]\n\n    if (this.npm.config.get('long')) {\n      columns[6] = type\n      columns[7] = homepage\n    }\n\n    if (this.npm.color) {\n      columns[0] = color[current === wanted ? 'yellow' : 'red'](columns[0]) // current\n      columns[2] = color.green(columns[2]) // wanted\n      columns[3] = color.magenta(columns[3]) // latest\n    }\n\n    return columns\n  }\n\n  // --parseable creates output like this:\n  // <fullpath>:<name@wanted>:<name@installed>:<name@latest>:<dependedby>\n  makeParseable (list) {\n    return list.map(dep => {\n      const {\n        name,\n        current,\n        wanted,\n        latest,\n        path,\n        dependent,\n        type,\n        homepage,\n      } = dep\n      const out = [\n        path,\n        name + '@' + wanted,\n        current ? (name + '@' + current) : 'MISSING',\n        name + '@' + latest,\n        dependent,\n      ]\n      if (this.npm.config.get('long'))\n        out.push(type, homepage)\n\n      return out.join(':')\n    }).join(os.EOL)\n  }\n\n  makeJSON (list) {\n    const out = {}\n    list.forEach(dep => {\n      const {\n        name,\n        current,\n        wanted,\n        latest,\n        path,\n        type,\n        dependent,\n        homepage,\n      } = dep\n      out[name] = {\n        current,\n        wanted,\n        latest,\n        dependent,\n        location: path,\n      }\n      if (this.npm.config.get('long')) {\n        out[name].type = type\n        out[name].homepage = homepage\n      }\n    })\n    return JSON.stringify(out, null, 2)\n  }\n}\nmodule.exports = Outdated\n"]},"metadata":{},"sourceType":"script"}