{"ast":null,"code":"var _jsxFileName = \"/Users/kaelen/nsc-mds/src/pages/Form.js\";\nimport axios from 'axios';\nimport { eventNames } from 'npm';\nimport React, { Component } from \"react\";\nimport \"../styles/Form.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkExtension = event => {\n      let files = event.target.files;\n      let err = '';\n      const types = ['file/json'];\n\n      for (var x = 0; x < files.length; x++) {\n        if (types.every(type => files[x].type !== type)) {\n          err += files[x].type + ' is not a supported format\\n';\n        }\n      }\n\n      ;\n\n      if (err != '') {\n        event.target.value = null;\n        console.log(err);\n        return false;\n      }\n\n      return true;\n    };\n\n    this.onFileChange = event => {\n      var files = event.target.files;\n\n      if (this.checkExtension(event)) {\n        this.setState({\n          selectedFile: event.target.files[0],\n          loaded: 0\n        });\n      }\n    };\n\n    this.onFileUpload = () => {\n      const formData = new FormData();\n      formData.append(\"myFile\", this.state.selectedFile, this.state.selectedFile.name);\n      axios.post(\"http://localhost:8000/upload\", formData, {}).then(res => {\n        console.log(res.statusText);\n      });\n    };\n\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", this.state.selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Type: \", this.state.selectedFile.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    this.state = {\n      selectedFile: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Submit form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group files\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Upload JSON File!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"form-control\",\n            multiple: \"\",\n            onChange: this.onFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit success fail\",\n          onClick: this.onFileUpload,\n          children: \"Submit!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), this.fileData()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/kaelen/nsc-mds/src/pages/Form.js"],"names":["axios","eventNames","React","Component","Form","constructor","props","checkExtension","event","files","target","err","types","x","length","every","type","value","console","log","onFileChange","setState","selectedFile","loaded","onFileUpload","formData","FormData","append","state","name","post","then","res","statusText","fileData","render"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { eventNames } from 'npm';\nimport React, { Component } from \"react\";\nimport \"../styles/Form.scss\";\n\nclass Form extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedFile: null\n    };\n  }\n\n  checkExtension = (event) => {\n    let files = event.target.files;\n    let err = '';\n    const types = ['file/json'];\n    for (var x = 0; x < files.length; x++) {\n      if (types.every(type => files[x].type !== type)) {\n        err += files[x].type + ' is not a supported format\\n';\n      }\n    };\n\n    if (err != '') {\n      event.target.value = null;\n      console.log(err);\n      return false;\n    }\n    return true;\n  }\n\n\n  onFileChange = event => {\n    var files = event.target.files;\n    if(this.checkExtension(event)) {\n      this.setState({ \n        selectedFile: event.target.files[0],\n        loaded: 0,\n      });\n    }\n\n  };\n\n  onFileUpload = () => {\n    const formData = new FormData();\n\n    formData.append(\n      \"myFile\",\n      this.state.selectedFile,\n      this.state.selectedFile.name\n    );\n\n    axios.post(\"http://localhost:8000/upload\", formData, {\n    })\n    .then(res => {\n      console.log(res.statusText)\n    })\n  };\n\n  fileData = () => {\n    if (this.state.selectedFile) {\n\n      return(\n        <div>\n          <p>File Name: {this.state.selectedFile.name}</p>\n          <p>File Type: {this.state.selectedFile.type}</p>\n        </div>\n      )\n    }\n  }\n  \n\n\n  render() {\n    \n    return (\n      <div id=\"Form\">\n        <h1>Submit form</h1>\n        <form>\n          <input type=\"text\" placeholder=\"Name\" />\n          <input type=\"text\" placeholder=\"Company\" />\n          {/* <input type=\"file\" onChange={this.onFileChange} /> */}\n          <div className=\"form-group files\">\n            <label>Upload JSON File!</label>\n            <input type=\"file\" className=\"form-control\" multiple=\"\" onChange={this.onFileChange} />\n          </div>\n          <button className=\"submit success fail\"onClick={this.onFileUpload}>Submit!</button>\n        </form>\n        {this.fileData()}\n      </div>\n    );\n  }\n}\n\n\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}