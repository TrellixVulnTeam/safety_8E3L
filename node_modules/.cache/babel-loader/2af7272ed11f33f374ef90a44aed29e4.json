{"ast":null,"code":"const spawn = require('@npmcli/promise-spawn');\n\nconst promiseRetry = require('promise-retry');\n\nconst shouldRetry = require('./should-retry.js');\n\nconst whichGit = require('./which.js');\n\nconst makeOpts = require('./opts.js');\n\nconst procLog = require('./proc-log.js');\n\nmodule.exports = (gitArgs, opts = {}) => {\n  const gitPath = whichGit(opts);\n  if (gitPath instanceof Error) return Promise.reject(gitPath);\n  const log = opts.log || procLog;\n  return promiseRetry((retry, number) => {\n    if (number !== 1) log.silly('pacote', `Retrying git command: ${gitArgs.join(' ')} attempt # ${number}`);\n    return spawn(gitPath, gitArgs, makeOpts(opts)).catch(er => {\n      if (shouldRetry(er.stderr, number)) retry(er);else throw er;\n    });\n  }, opts.retry !== null && opts.retry !== undefined ? opts.retry : {\n    retries: opts.fetchRetries || 2,\n    factor: opts.fetchRetryFactor || 10,\n    maxTimeout: opts.fetchRetryMaxtimeout || 60000,\n    minTimeout: opts.fetchRetryMintimeout || 1000\n  });\n};","map":{"version":3,"sources":["/Users/kaelen/nsc-mds/node_modules/npm/node_modules/@npmcli/git/lib/spawn.js"],"names":["spawn","require","promiseRetry","shouldRetry","whichGit","makeOpts","procLog","module","exports","gitArgs","opts","gitPath","Error","Promise","reject","log","retry","number","silly","join","catch","er","stderr","undefined","retries","fetchRetries","factor","fetchRetryFactor","maxTimeout","fetchRetryMaxtimeout","minTimeout","fetchRetryMintimeout"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,uBAAD,CAArB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,eAAD,CAA5B;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,mBAAD,CAA3B;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,YAAD,CAAxB;;AACA,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,WAAD,CAAxB;;AACA,MAAMK,OAAO,GAAGL,OAAO,CAAC,eAAD,CAAvB;;AAEAM,MAAM,CAACC,OAAP,GAAiB,CAACC,OAAD,EAAUC,IAAI,GAAG,EAAjB,KAAwB;AACvC,QAAMC,OAAO,GAAGP,QAAQ,CAACM,IAAD,CAAxB;AAEA,MAAIC,OAAO,YAAYC,KAAvB,EACE,OAAOC,OAAO,CAACC,MAAR,CAAeH,OAAf,CAAP;AAEF,QAAMI,GAAG,GAAGL,IAAI,CAACK,GAAL,IAAYT,OAAxB;AACA,SAAOJ,YAAY,CAAC,CAACc,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAIA,MAAM,KAAK,CAAf,EACEF,GAAG,CAACG,KAAJ,CAAU,QAAV,EAAqB,yBACnBT,OAAO,CAACU,IAAR,CAAa,GAAb,CAAkB,cAAaF,MAAO,EADxC;AAGF,WAAOjB,KAAK,CAACW,OAAD,EAAUF,OAAV,EAAmBJ,QAAQ,CAACK,IAAD,CAA3B,CAAL,CACJU,KADI,CACEC,EAAE,IAAI;AACX,UAAIlB,WAAW,CAACkB,EAAE,CAACC,MAAJ,EAAYL,MAAZ,CAAf,EACED,KAAK,CAACK,EAAD,CAAL,CADF,KAGE,MAAMA,EAAN;AACH,KANI,CAAP;AAOD,GAZkB,EAYhBX,IAAI,CAACM,KAAL,KAAe,IAAf,IAAuBN,IAAI,CAACM,KAAL,KAAeO,SAAtC,GAAkDb,IAAI,CAACM,KAAvD,GAA+D;AAChEQ,IAAAA,OAAO,EAAEd,IAAI,CAACe,YAAL,IAAqB,CADkC;AAEhEC,IAAAA,MAAM,EAAEhB,IAAI,CAACiB,gBAAL,IAAyB,EAF+B;AAGhEC,IAAAA,UAAU,EAAElB,IAAI,CAACmB,oBAAL,IAA6B,KAHuB;AAIhEC,IAAAA,UAAU,EAAEpB,IAAI,CAACqB,oBAAL,IAA6B;AAJuB,GAZ/C,CAAnB;AAkBD,CAzBD","sourcesContent":["const spawn = require('@npmcli/promise-spawn')\nconst promiseRetry = require('promise-retry')\nconst shouldRetry = require('./should-retry.js')\nconst whichGit = require('./which.js')\nconst makeOpts = require('./opts.js')\nconst procLog = require('./proc-log.js')\n\nmodule.exports = (gitArgs, opts = {}) => {\n  const gitPath = whichGit(opts)\n\n  if (gitPath instanceof Error)\n    return Promise.reject(gitPath)\n\n  const log = opts.log || procLog\n  return promiseRetry((retry, number) => {\n    if (number !== 1)\n      log.silly('pacote', `Retrying git command: ${\n        gitArgs.join(' ')} attempt # ${number}`)\n\n    return spawn(gitPath, gitArgs, makeOpts(opts))\n      .catch(er => {\n        if (shouldRetry(er.stderr, number))\n          retry(er)\n        else\n          throw er\n      })\n  }, opts.retry !== null && opts.retry !== undefined ? opts.retry : {\n    retries: opts.fetchRetries || 2,\n    factor: opts.fetchRetryFactor || 10,\n    maxTimeout: opts.fetchRetryMaxtimeout || 60000,\n    minTimeout: opts.fetchRetryMintimeout || 1000,\n  })\n}\n"]},"metadata":{},"sourceType":"script"}