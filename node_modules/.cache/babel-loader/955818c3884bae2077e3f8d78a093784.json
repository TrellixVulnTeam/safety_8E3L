{"ast":null,"code":"var _jsxFileName = \"/Users/kaelen/nsc-mds/src/pages/Form.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport \"../styles/Form.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      const {\n        id\n      } = this.props;\n      const value = event.target.value;\n      this.setState;\n    };\n\n    this.state = {\n      focussed: props.locked && props.focussed || false,\n      value: props.value || '',\n      error: props.value || '',\n      label: props.value || ''\n    };\n  }\n\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {}\n  //   this.handleChange = this.handleChange.bind(this);\n  //   this.handleSubmit = this.handleSubmit.bind(this);\n  // }\n  // handleChange(event) {\n  //   this.setState({value: event.target.value});\n  // }\n  // handleSubmit(event) {\n  //   event.preventDefault();\n  // }\n  render() {\n    const {\n      focussed,\n      value,\n      error,\n      label\n    } = this.state;\n    const {\n      id,\n      type,\n      locked\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Form\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        id: id,\n        type: \"text\",\n        value: value,\n        placeholder: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nForm.propTypes = {\n  id: PropTypes.string.isRequired,\n  locked: PropTypes.bool,\n  focussed: PropTypes.bool,\n  value: PropTypes.string,\n  error: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func\n};\nForm.defaultProps = {\n  locked: false,\n  focussed: false,\n  value: '',\n  error: '',\n  label: '',\n  onChange: () => ''\n};\nexport default Form;","map":{"version":3,"sources":["/Users/kaelen/nsc-mds/src/pages/Form.js"],"names":["React","Component","PropTypes","Form","constructor","props","onChange","event","id","value","target","setState","state","focussed","locked","error","label","render","type","propTypes","string","isRequired","bool","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,qBAAP;;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAqB3BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,QAXmB,GAWRC,KAAK,IAAI;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAS,KAAKH,KAApB;AACA,YAAMI,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAaD,KAA3B;AACA,WAAKE,QAAL;AACD,KAfkB;;AAGjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAGR,KAAK,CAACS,MAAN,IAAgBT,KAAK,CAACQ,QAAvB,IAAoC,KADnC;AAEXJ,MAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,IAAe,EAFX;AAGXM,MAAAA,KAAK,EAAEV,KAAK,CAACI,KAAN,IAAe,EAHX;AAIXO,MAAAA,KAAK,EAAEX,KAAK,CAACI,KAAN,IAAe;AAJX,KAAb;AAMD;;AASD;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGAQ,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEJ,MAAAA,QAAF;AAAYJ,MAAAA,KAAZ;AAAmBM,MAAAA,KAAnB;AAA0BC,MAAAA;AAA1B,QAAoC,KAAKJ,KAA/C;AACA,UAAM;AAAEJ,MAAAA,EAAF;AAAMU,MAAAA,IAAN;AAAYJ,MAAAA;AAAZ,QAAuB,KAAKT,KAAlC;AAEA,wBACE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA,6BAoBE;AAAO,QAAA,EAAE,EAAEG,EAAX;AAAe,QAAA,IAAI,EAAC,MAApB;AAA2B,QAAA,KAAK,EAAEC,KAAlC;AAAyC,QAAA,WAAW,EAAEO;AAAtD;AAAA;AAAA;AAAA;AAAA;AApBF;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AAtF0B;;AAAvBb,I,CAEGgB,S,GAAY;AACjBX,EAAAA,EAAE,EAAEN,SAAS,CAACkB,MAAV,CAAiBC,UADJ;AAEjBP,EAAAA,MAAM,EAAEZ,SAAS,CAACoB,IAFD;AAGjBT,EAAAA,QAAQ,EAAEX,SAAS,CAACoB,IAHH;AAIjBb,EAAAA,KAAK,EAAEP,SAAS,CAACkB,MAJA;AAKjBL,EAAAA,KAAK,EAAEb,SAAS,CAACkB,MALA;AAMjBJ,EAAAA,KAAK,EAAEd,SAAS,CAACkB,MANA;AAOjBd,EAAAA,QAAQ,EAAEJ,SAAS,CAACqB;AAPH,C;AAFfpB,I,CAYGqB,Y,GAAe;AACpBV,EAAAA,MAAM,EAAE,KADY;AAEpBD,EAAAA,QAAQ,EAAE,KAFU;AAGpBJ,EAAAA,KAAK,EAAE,EAHa;AAIpBM,EAAAA,KAAK,EAAE,EAJa;AAKpBC,EAAAA,KAAK,EAAE,EALa;AAMpBV,EAAAA,QAAQ,EAAE,MAAM;AANI,C;AA6ExB,eAAeH,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport \"../styles/Form.scss\";\n\nclass Form extends Component {\n\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    locked: PropTypes.bool,\n    focussed: PropTypes.bool,\n    value: PropTypes.string,\n    error: PropTypes.string,\n    label: PropTypes.string,\n    onChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    locked: false,\n    focussed: false,\n    value: '',\n    error: '',\n    label: '',\n    onChange: () => '',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      focussed: (props.locked && props.focussed) || false,\n      value: props.value || '',\n      error: props.value || '',\n      label: props.value || '',\n    };\n  }\n\n  onChange = event => {\n    const { id } = this.props;\n    const value = event.target.value;\n    this.setState\n  }\n\n\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {}\n\n  //   this.handleChange = this.handleChange.bind(this);\n  //   this.handleSubmit = this.handleSubmit.bind(this);\n  // }\n\n  // handleChange(event) {\n  //   this.setState({value: event.target.value});\n  // }\n\n  // handleSubmit(event) {\n  //   event.preventDefault();\n  // }\n\n\n  render() {\n\n    const { focussed, value, error, label } = this.state;\n    const { id, type, locked } = this.props;\n\n    return (\n      <div id=\"Form\">\n        {/* <form onSubmit={this.handleSubmit}>\n            <input\n              type=\"text\"\n              placeholder=\"Name\"\n              value={this.state.value}\n              onChange={this.handleChange}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Company\"\n              value={this.state.value}\n              onChange={this.handleChange}\n            />\n            <input\n              type=\"file\"\n            />\n          <input type=\"submit\" value=\"Submit\" />\n        </form> */}\n\n        <input id={id} type=\"text\" value={value} placeholder={label} />\n\n      </div>\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}