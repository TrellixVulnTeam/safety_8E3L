{"ast":null,"code":"const {\n  spawn\n} = require('@npmcli/git');\n\nconst semver = require('semver');\n\nmodule.exports = async opts => {\n  const tag = (await spawn(['describe', '--abbrev=0'], opts)).stdout.trim();\n  const match = tag.match(/v?(\\d+\\.\\d+\\.\\d+(?:[-+].+)?)/);\n  const ver = match && semver.clean(match[1], {\n    loose: true\n  });\n  if (ver) return ver;\n  throw new Error(`Tag is not a valid version: ${JSON.stringify(tag)}`);\n};","map":{"version":3,"sources":["/Users/kaelen/nsc-mds/node_modules/npm/node_modules/libnpmversion/lib/retrieve-tag.js"],"names":["spawn","require","semver","module","exports","opts","tag","stdout","trim","match","ver","clean","loose","Error","JSON","stringify"],"mappings":"AAAA,MAAM;AAACA,EAAAA;AAAD,IAAUC,OAAO,CAAC,aAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,MAAMC,IAAN,IAAc;AAC7B,QAAMC,GAAG,GAAG,CAAC,MAAMN,KAAK,CAAC,CAAC,UAAD,EAAa,YAAb,CAAD,EAA6BK,IAA7B,CAAZ,EAAgDE,MAAhD,CAAuDC,IAAvD,EAAZ;AACA,QAAMC,KAAK,GAAGH,GAAG,CAACG,KAAJ,CAAU,8BAAV,CAAd;AACA,QAAMC,GAAG,GAAGD,KAAK,IAAIP,MAAM,CAACS,KAAP,CAAaF,KAAK,CAAC,CAAD,CAAlB,EAAuB;AAAEG,IAAAA,KAAK,EAAE;AAAT,GAAvB,CAArB;AACA,MAAIF,GAAJ,EACE,OAAOA,GAAP;AACF,QAAM,IAAIG,KAAJ,CAAW,+BAA8BC,IAAI,CAACC,SAAL,CAAeT,GAAf,CAAoB,EAA7D,CAAN;AACD,CAPD","sourcesContent":["const {spawn} = require('@npmcli/git')\nconst semver = require('semver')\n\nmodule.exports = async opts => {\n  const tag = (await spawn(['describe', '--abbrev=0'], opts)).stdout.trim()\n  const match = tag.match(/v?(\\d+\\.\\d+\\.\\d+(?:[-+].+)?)/)\n  const ver = match && semver.clean(match[1], { loose: true })\n  if (ver)\n    return ver\n  throw new Error(`Tag is not a valid version: ${JSON.stringify(tag)}`)\n}\n"]},"metadata":{},"sourceType":"script"}