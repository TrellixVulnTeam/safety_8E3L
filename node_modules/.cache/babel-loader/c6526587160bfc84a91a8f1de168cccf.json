{"ast":null,"code":"const path = require('path');\n\nconst Arborist = require('@npmcli/arborist');\n\nconst log = require('npmlog');\n\nconst reifyFinish = require('./utils/reify-finish.js');\n\nconst completion = require('./utils/completion/installed-deep.js');\n\nconst BaseCommand = require('./base-command.js');\n\nclass Update extends BaseCommand {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description() {\n    return 'Update packages';\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get name() {\n    return 'update';\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get params() {\n    return ['global'];\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get usage() {\n    return ['[<pkg>...]'];\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  async completion(opts) {\n    return completion(this.npm, opts);\n  }\n\n  exec(args, cb) {\n    this.update(args).then(() => cb()).catch(cb);\n  }\n\n  async update(args) {\n    const update = args.length === 0 ? true : args;\n    const global = path.resolve(this.npm.globalDir, '..');\n    const where = this.npm.config.get('global') ? global : this.npm.prefix;\n\n    if (this.npm.config.get('depth')) {\n      log.warn('update', 'The --depth option no longer has any effect. See RFC0019.\\n' + 'https://github.com/npm/rfcs/blob/latest/implemented/0019-remove-update-depth-option.md');\n    }\n\n    const arb = new Arborist({ ...this.npm.flatOptions,\n      log: this.npm.log,\n      path: where\n    });\n    await arb.reify({\n      update\n    });\n    await reifyFinish(this.npm, arb);\n  }\n\n}\n\nmodule.exports = Update;","map":{"version":3,"sources":["/Users/kaelen/nsc-mds/node_modules/npm/lib/update.js"],"names":["path","require","Arborist","log","reifyFinish","completion","BaseCommand","Update","description","name","params","usage","opts","npm","exec","args","cb","update","then","catch","length","global","resolve","globalDir","where","config","get","prefix","warn","arb","flatOptions","reify","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,kBAAD,CAAxB;;AACA,MAAME,GAAG,GAAGF,OAAO,CAAC,QAAD,CAAnB;;AAEA,MAAMG,WAAW,GAAGH,OAAO,CAAC,yBAAD,CAA3B;;AACA,MAAMI,UAAU,GAAGJ,OAAO,CAAC,sCAAD,CAA1B;;AAEA,MAAMK,WAAW,GAAGL,OAAO,CAAC,mBAAD,CAA3B;;AACA,MAAMM,MAAN,SAAqBD,WAArB,CAAiC;AAC/B;AACsB,aAAXE,WAAW,GAAI;AACxB,WAAO,iBAAP;AACD;AAED;;;AACe,aAAJC,IAAI,GAAI;AACjB,WAAO,QAAP;AACD;AAED;;;AACiB,aAANC,MAAM,GAAI;AACnB,WAAO,CAAC,QAAD,CAAP;AACD;AAED;;;AACgB,aAALC,KAAK,GAAI;AAClB,WAAO,CAAC,YAAD,CAAP;AACD;AAED;;;AACgB,QAAVN,UAAU,CAAEO,IAAF,EAAQ;AACtB,WAAOP,UAAU,CAAC,KAAKQ,GAAN,EAAWD,IAAX,CAAjB;AACD;;AAEDE,EAAAA,IAAI,CAAEC,IAAF,EAAQC,EAAR,EAAY;AACd,SAAKC,MAAL,CAAYF,IAAZ,EAAkBG,IAAlB,CAAuB,MAAMF,EAAE,EAA/B,EAAmCG,KAAnC,CAAyCH,EAAzC;AACD;;AAEW,QAANC,MAAM,CAAEF,IAAF,EAAQ;AAClB,UAAME,MAAM,GAAGF,IAAI,CAACK,MAAL,KAAgB,CAAhB,GAAoB,IAApB,GAA2BL,IAA1C;AACA,UAAMM,MAAM,GAAGrB,IAAI,CAACsB,OAAL,CAAa,KAAKT,GAAL,CAASU,SAAtB,EAAiC,IAAjC,CAAf;AACA,UAAMC,KAAK,GAAG,KAAKX,GAAL,CAASY,MAAT,CAAgBC,GAAhB,CAAoB,QAApB,IACVL,MADU,GAEV,KAAKR,GAAL,CAASc,MAFb;;AAIA,QAAI,KAAKd,GAAL,CAASY,MAAT,CAAgBC,GAAhB,CAAoB,OAApB,CAAJ,EAAkC;AAChCvB,MAAAA,GAAG,CAACyB,IAAJ,CAAS,QAAT,EAAmB,gEACjB,wFADF;AAED;;AAED,UAAMC,GAAG,GAAG,IAAI3B,QAAJ,CAAa,EACvB,GAAG,KAAKW,GAAL,CAASiB,WADW;AAEvB3B,MAAAA,GAAG,EAAE,KAAKU,GAAL,CAASV,GAFS;AAGvBH,MAAAA,IAAI,EAAEwB;AAHiB,KAAb,CAAZ;AAMA,UAAMK,GAAG,CAACE,KAAJ,CAAU;AAAEd,MAAAA;AAAF,KAAV,CAAN;AACA,UAAMb,WAAW,CAAC,KAAKS,GAAN,EAAWgB,GAAX,CAAjB;AACD;;AAlD8B;;AAoDjCG,MAAM,CAACC,OAAP,GAAiB1B,MAAjB","sourcesContent":["const path = require('path')\n\nconst Arborist = require('@npmcli/arborist')\nconst log = require('npmlog')\n\nconst reifyFinish = require('./utils/reify-finish.js')\nconst completion = require('./utils/completion/installed-deep.js')\n\nconst BaseCommand = require('./base-command.js')\nclass Update extends BaseCommand {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description () {\n    return 'Update packages'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name () {\n    return 'update'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params () {\n    return ['global']\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage () {\n    return ['[<pkg>...]']\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  async completion (opts) {\n    return completion(this.npm, opts)\n  }\n\n  exec (args, cb) {\n    this.update(args).then(() => cb()).catch(cb)\n  }\n\n  async update (args) {\n    const update = args.length === 0 ? true : args\n    const global = path.resolve(this.npm.globalDir, '..')\n    const where = this.npm.config.get('global')\n      ? global\n      : this.npm.prefix\n\n    if (this.npm.config.get('depth')) {\n      log.warn('update', 'The --depth option no longer has any effect. See RFC0019.\\n' +\n        'https://github.com/npm/rfcs/blob/latest/implemented/0019-remove-update-depth-option.md')\n    }\n\n    const arb = new Arborist({\n      ...this.npm.flatOptions,\n      log: this.npm.log,\n      path: where,\n    })\n\n    await arb.reify({ update })\n    await reifyFinish(this.npm, arb)\n  }\n}\nmodule.exports = Update\n"]},"metadata":{},"sourceType":"script"}